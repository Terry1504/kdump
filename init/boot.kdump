#!/bin/bash
#
#  Copyright 2005 Red Hat, Inc.
#  Author:  Jeff Moyer <jmoyer@redhat.com>
#  Modifications for SUSE from Chris Mason <mason@suse.com>
#                              Takashi Iwai <tiwai@suse.de>
#                              Bernhard Walle <bwalle@suse.de>
#
#  kdump
#
#  Description:  The kdump init script provides the support necessary for
#                loading a kdump kernel into memory at system bootup time.
#
#
# /etc/init.d/boot.kdump
### BEGIN INIT INFO
# Provides:       boot.kdump
# Required-Start: $local_fs boot.localnet
# Should-Start:
# Should-Stop:
# Required-Stop:  $local_fs boot.localnet
# Default-Start:  B
# Default-Stop:
# Short-Description: kdump boot configuration
# Description:    This script loads the kdump kernel on startup.
### END INIT INFO

. /etc/rc.status
. /lib/kdump/rc.kdump.functions

case "$1" in
  start|restart|force-reload)
        load_kdump
        ;;
  stop)
        if [ "$RUNLEVEL" != "" ]; then
            echo -n "Not unloading kdump during runlevel changes"
            rc_status -s
        else
            kdump_kernel_loaded
            if [ $? -ne 1 ] ; then
                echo -n "Unloading kdump"
		if use_fadump; then
		    # The kernel fails with EINVAL if unregistered already
		    # (see bnc#814780)
		    if [ "$(cat $FADUMP_REGISTERED)" != "0" ]; then
			echo 0 > $FADUMP_REGISTERED
		    fi
		else
                    $KEXEC -p -u
		fi
            fi
            rc_status -v
        fi
        ;;
  status)
        kdump_kernel_loaded
        case $? in
             0)     echo "kdump kernel loaded"
                    rc_status -r -v
                    ;;
             1)     echo "kdump kernel not loaded"
                    rc_failed
                    rc_status -v
                    ;;
            -1)     echo "not implemented"
                    rc_failed 4
                    rc_status -v
                    ;;
        esac
        ;;
  try-restart)
        if kdump_kernel_loaded ; then
            $0 start
        else
            rc_reset
        fi
        rc_status
        ;;
  reload)
        rc_failed 3
        rc_status
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
        exit 1
esac

rc_exit

# vim: set ts=4 sw=4 et:
